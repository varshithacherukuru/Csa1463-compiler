#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

#define MAX_SIZE 100

// Structure to represent a symbol table entry
typedef struct {
    char name[50];
    int value; // This can be extended as needed
} SymbolEntry;

// Global symbol table
SymbolEntry symbolTable[MAX_SIZE];
int symbolCount = 0;

// Function to insert an entry into the symbol table
void insertEntry(const char *name, int value) {
    if (symbolCount < MAX_SIZE) {
        strcpy(symbolTable[symbolCount].name, name);
        symbolTable[symbolCount].value = value;
        symbolCount++;
        printf("Inserted: %s\n", name);
    } else {
        printf("Symbol table is full. Cannot insert: %s\n", name);
    }
}

// Function to search for an entry in the symbol table
int searchEntry(const char *name) {
    for (int i = 0; i < symbolCount; ++i) {
        if (strcmp(symbolTable[i].name, name) == 0) {
            return i; // Return index if found
        }
    }
    return -1; // Return -1 if not found
}

// Function to delete an entry from the symbol table
void deleteEntry(const char *name) {
    int index = searchEntry(name);
    if (index != -1) {
        // Move entries after the deleted one to fill the gap
        for (int i = index; i < symbolCount - 1; ++i) {
            strcpy(symbolTable[i].name, symbolTable[i + 1].name);
            symbolTable[i].value = symbolTable[i + 1].value;
        }
        symbolCount--;
        printf("Deleted: %s\n", name);
    } else {
        printf("Entry not found: %s\n", name);
    }
}

// Function to display the symbol table
void displaySymbolTable() {
    printf("Symbol Table:\n");
    printf("Name\tValue\n");
    for (int i = 0; i < symbolCount; ++i) {
        printf("%s\t%d\n", symbolTable[i].name, symbolTable[i].value);
    }
}

int main() {
    int choice;
    char name[50];
    int value;

    do {
        printf("\nSymbol Table Operations\n");
        printf("1. Insert\n");
        printf("2. Search\n");
        printf("3. Delete\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter name to insert: ");
                scanf("%s", name);
                printf("Enter value: ");
                scanf("%d", &value);
                insertEntry(name, value);
                break;
            case 2:
                printf("Enter name to search: ");
                scanf("%s", name);
                if (searchEntry(name) != -1) {
                    printf("Found: %s\n", name);
                } else {
                    printf("Not found: %s\n", name);
                }
                break;
            case 3:
                printf("Enter name to delete: ");
                scanf("%s", name);
                deleteEntry(name);
                break;
            case 4:
                displaySymbolTable();
                break;
            case 5:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice. Please enter a number between 1 and 5.\n");
        }
    } while (choice != 5);

    return 0;
}
